syntax = "proto3";
package pyvisa_grpc;

service PyVISAService {
  // Connect to a resource
  rpc Connect(ConnectRequest) returns (StatusResponse);

  // Disconnect from a resource
  rpc Disconnect(DisconnectRequest) returns (StatusResponse);

  // Read from a resource
  rpc Read(ResourceRequest) returns (ReadResponse);

  // Write to a resource
  rpc Write(WriteRequest) returns (StatusResponse);

  // Query a resource (write then read)
  rpc Query(QueryRequest) returns (ReadResponse);
}

message ConnectRequest {
  string resource_name =
      1; // VISA resource string (e.g., "TCPIP0::192.168.1.1::INSTR")
}

message DisconnectRequest {
  string resource_name = 1; // VISA resource string to disconnect
}

message ResourceRequest {
  string resource_name = 1; // VISA resource string to interact with
}

message WriteRequest {
  string resource_name = 1; // VISA resource string to write to
  string data = 2;          // Data to write
}

message QueryRequest {
  string resource_name = 1; // VISA resource string to query
  string command = 2;       // Command to send before reading
}

message ReadResponse {
  string data = 1;           // Data read from the resource
  StatusResponse status = 2; // Operation status
}

message StatusResponse {
  bool success = 1;   // Operation success status
  string message = 2; // Additional status information
}
